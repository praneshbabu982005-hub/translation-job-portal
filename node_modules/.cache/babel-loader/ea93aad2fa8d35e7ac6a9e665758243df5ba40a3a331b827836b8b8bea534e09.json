{"ast":null,"code":"import React,{useState,useContext}from'react';import{AuthContext}from'../App';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function LoginForm(){const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState('');const{login}=useContext(AuthContext);const navigate=useNavigate();const handleSubmit=async e=>{e.preventDefault();setError('');try{const res=await fetch('http://localhost:5000/api/auth/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});const data=await res.json();if(!res.ok)throw new Error(data.message||'Login failed');login(data.token);navigate('/jobs');}catch(err){setError(err.message);}};return/*#__PURE__*/_jsxs(\"form\",{className:\"login-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),error&&/*#__PURE__*/_jsx(\"div\",{style:{color:'red'},children:error}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",value:email,onChange:e=>setEmail(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"})]});}export default LoginForm;","map":{"version":3,"names":["React","useState","useContext","AuthContext","useNavigate","jsx","_jsx","jsxs","_jsxs","LoginForm","email","setEmail","password","setPassword","error","setError","login","navigate","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","token","err","className","onSubmit","children","style","color","type","placeholder","value","onChange","target","required"],"sources":["C:/Users/prane/OneDrive/Desktop/ad/translation-job-portal/src/components/LoginForm.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { AuthContext } from '../App';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction LoginForm() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const { login } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/auth/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password })\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) throw new Error(data.message || 'Login failed');\r\n      login(data.token);\r\n      navigate('/jobs');\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"login-form\" onSubmit={handleSubmit}>\r\n      <h2>Login</h2>\r\n      {error && <div style={{color:'red'}}>{error}</div>}\r\n      <input type=\"email\" placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)} required />\r\n      <input type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} required />\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CACnD,OAASC,WAAW,KAAQ,QAAQ,CACpC,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,QAAS,CAAAC,SAASA,CAAA,CAAG,CACnB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACW,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACa,KAAK,CAAEC,QAAQ,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAEe,KAAM,CAAC,CAAGd,UAAU,CAACC,WAAW,CAAC,CACzC,KAAM,CAAAc,QAAQ,CAAGb,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAc,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBL,QAAQ,CAAC,EAAE,CAAC,CACZ,GAAI,CACF,KAAM,CAAAM,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,sCAAsC,CAAE,CAC9DC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEjB,KAAK,CAAEE,QAAS,CAAC,CAC1C,CAAC,CAAC,CACF,KAAM,CAAAgB,IAAI,CAAG,KAAM,CAAAP,GAAG,CAACQ,IAAI,CAAC,CAAC,CAC7B,GAAI,CAACR,GAAG,CAACS,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAACH,IAAI,CAACI,OAAO,EAAI,cAAc,CAAC,CAC5DhB,KAAK,CAACY,IAAI,CAACK,KAAK,CAAC,CACjBhB,QAAQ,CAAC,OAAO,CAAC,CACnB,CAAE,MAAOiB,GAAG,CAAE,CACZnB,QAAQ,CAACmB,GAAG,CAACF,OAAO,CAAC,CACvB,CACF,CAAC,CAED,mBACExB,KAAA,SAAM2B,SAAS,CAAC,YAAY,CAACC,QAAQ,CAAElB,YAAa,CAAAmB,QAAA,eAClD/B,IAAA,OAAA+B,QAAA,CAAI,OAAK,CAAI,CAAC,CACbvB,KAAK,eAAIR,IAAA,QAAKgC,KAAK,CAAE,CAACC,KAAK,CAAC,KAAK,CAAE,CAAAF,QAAA,CAAEvB,KAAK,CAAM,CAAC,cAClDR,IAAA,UAAOkC,IAAI,CAAC,OAAO,CAACC,WAAW,CAAC,OAAO,CAACC,KAAK,CAAEhC,KAAM,CAACiC,QAAQ,CAAExB,CAAC,EAAIR,QAAQ,CAACQ,CAAC,CAACyB,MAAM,CAACF,KAAK,CAAE,CAACG,QAAQ,MAAE,CAAC,cAC1GvC,IAAA,UAAOkC,IAAI,CAAC,UAAU,CAACC,WAAW,CAAC,UAAU,CAACC,KAAK,CAAE9B,QAAS,CAAC+B,QAAQ,CAAExB,CAAC,EAAIN,WAAW,CAACM,CAAC,CAACyB,MAAM,CAACF,KAAK,CAAE,CAACG,QAAQ,MAAE,CAAC,cACtHvC,IAAA,WAAQkC,IAAI,CAAC,QAAQ,CAAAH,QAAA,CAAC,OAAK,CAAQ,CAAC,EAChC,CAAC,CAEX,CAEA,cAAe,CAAA5B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}